{"ast":null,"code":"import { domainPath } from \"./Config\";\n\nconst PostAPI = (path, data) => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`, {\n      method: \"post\",\n      // method post untuk insert data\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data) // kirimkan ke body request untuk data artikel yang\n\n    }) // akan ditambahkan (insert)\n    .then(result => {\n      resolve(result); // jika success menerima response dari server maka resolve response ke user\n    }, err => {\n      reject(err); // jika terjadi error dari server (server down, dll)\n    });\n  });\n  return promise;\n};\n\n_c = PostAPI;\nexport default PostAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostAPI\");","map":{"version":3,"sources":["C:/Users/ROG/minggu9hanintugas/src/services/Post.js"],"names":["domainPath","PostAPI","path","data","promise","Promise","resolve","reject","fetch","method","headers","Accept","body","JSON","stringify","then","result","err"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC9B,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CC,IAAAA,KAAK,CAAE,GAAER,UAAW,IAAGE,IAAK,EAAvB,EAA0B;AAC7BO,MAAAA,MAAM,EAAE,MADqB;AACb;AAChBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFoB;AAM7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CANuB,CAMD;;AANC,KAA1B,CAAL,CAOG;AAPH,KAQGY,IARH,CASKC,MAAD,IAAY;AACVV,MAAAA,OAAO,CAACU,MAAD,CAAP,CADU,CACO;AAClB,KAXL,EAYKC,GAAD,IAAS;AACPV,MAAAA,MAAM,CAACU,GAAD,CAAN,CADO,CACM;AACd,KAdL;AAgBD,GAjBe,CAAhB;AAkBA,SAAOb,OAAP;AACD,CApBD;;KAAMH,O;AAqBN,eAAeA,OAAf","sourcesContent":["import { domainPath } from \"./Config\";\n\nconst PostAPI = (path, data) => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`, {\n      method: \"post\", // method post untuk insert data\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data), // kirimkan ke body request untuk data artikel yang\n    }) // akan ditambahkan (insert)\n      .then(\n        (result) => {\n          resolve(result); // jika success menerima response dari server maka resolve response ke user\n        },\n        (err) => {\n          reject(err); // jika terjadi error dari server (server down, dll)\n        }\n      );\n  });\n  return promise;\n};\nexport default PostAPI;\n"]},"metadata":{},"sourceType":"module"}