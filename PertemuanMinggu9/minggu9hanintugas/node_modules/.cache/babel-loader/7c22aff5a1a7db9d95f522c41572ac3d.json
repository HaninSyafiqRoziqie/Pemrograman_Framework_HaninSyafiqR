{"ast":null,"code":"import { domainPath } from \"./Config\";\n\nconst GetAPI = path => {\n  //path digunakan untuk menunjuk alamat API yang akan di-request\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`) // alamat url domain + path untuk mengakses full alamat API yang di-request\n    .then(response => response.json()) // response dari server harus dijadikan json\n    .then(result => {\n      resolve(result); // jika success menerima response dari server maka resolve response ke user\n    }, err => {\n      reject(err); // jika terjadi error dari server (server down, dll)\n    } // maka kirim pesan error ke user melalui reject\n    );\n  });\n  return promise;\n};\n\n_c = GetAPI;\nexport default GetAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAPI\");","map":{"version":3,"sources":["C:/Users/ROG/minggu9hanintugas/src/services/Get.js"],"names":["domainPath","GetAPI","path","promise","Promise","resolve","reject","fetch","then","response","json","result","err"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACvB;AACA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CC,IAAAA,KAAK,CAAE,GAAEP,UAAW,IAAGE,IAAK,EAAvB,CAAL,CAA+B;AAA/B,KACGM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EACuC;AADvC,KAEGF,IAFH,CAGKG,MAAD,IAAY;AACVN,MAAAA,OAAO,CAACM,MAAD,CAAP,CADU,CACO;AAClB,KALL,EAMKC,GAAD,IAAS;AACPN,MAAAA,MAAM,CAACM,GAAD,CAAN,CADO,CACM;AACd,KARL,CAQM;AARN;AAUD,GAXe,CAAhB;AAYA,SAAOT,OAAP;AACD,CAfD;;KAAMF,M;AAgBN,eAAeA,MAAf","sourcesContent":["import { domainPath } from \"./Config\";\n\nconst GetAPI = (path) => {\n  //path digunakan untuk menunjuk alamat API yang akan di-request\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`) // alamat url domain + path untuk mengakses full alamat API yang di-request\n      .then((response) => response.json()) // response dari server harus dijadikan json\n      .then(\n        (result) => {\n          resolve(result); // jika success menerima response dari server maka resolve response ke user\n        },\n        (err) => {\n          reject(err); // jika terjadi error dari server (server down, dll)\n        } // maka kirim pesan error ke user melalui reject\n      );\n  });\n  return promise;\n};\nexport default GetAPI;\n"]},"metadata":{},"sourceType":"module"}